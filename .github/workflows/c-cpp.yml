name: 'Github Actions For Compiling cpp files and Checking if they are can pass test cases'
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

jobs:
  get-changed-files:
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3
        # tj-actions/changed-filesを動作させるために指定している
        with:
          fetch-depth: 0
      - name: Get changed files
        uses: tj-actions/changed-files@v39
        id: changed-files
        # パスに関係なく変更があったcppファイルのパスを全て取得する
        with:
          files: |
            **.cpp
          files_separator: "\n"
      - name: Output changed files
        run: echo ${{ steps.changed-files.outputs.all_changed_files }}
        # TODO: 仮組みできたら、「変更ファイルを取得する」ジョブ、「DevContainerを立ち上げ & コンパイル、atestする」ジョブに分ける
      - name: Build and run dev container task
        uses: devcontainers/ci@v0.3
        env:
          WORKSPACE_PATH: /workspaces/Atcoder/
        with:
          # TODO: atestのaliasが有効になっていない件の確認
          # TODO: テストケース用のファイルを取得する必要あり(ただし普通に取得するとmain.cppが上書きされてしまうかも)
          runCmd: |
            echo $(dirname ${WORKSPACE_PATH}${{ steps.changed-files.outputs.all_changed_files }})
            cd $(dirname ${WORKSPACE_PATH}${{ steps.changed-files.outputs.all_changed_files }})
            ls
            g++-12  -Wfatal-errors -Wall -Wextra -Wshadow -Wconversion -Wfloat-equal -ftrapv -fsanitize=address,undefined -fno-omit-frame-pointer -fno-sanitize-recover -std=gnu++20 -I /tmp/ac-library main.cpp; atcoder-tools test
          env: |
            WORKSPACE_PATH
      # - name: Compiling cpp files and Checking if they are can pass test cases
      #   uses:

# name: C/C++ CI

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   build:

#     runs-on: ubuntu-latest

#     steps:
#     - uses: actions/checkout@v3
#     - name: configure
#       run: ./configure
#     - name: make
#       run: make
#     - name: make check
#       run: make check
#     - name: make distcheck
#       run: make distcheck
