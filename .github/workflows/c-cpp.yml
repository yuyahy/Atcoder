name: "Github Actions For Compiling cpp files and Checking if they are can pass test cases"
on: # rebuild any PRs and main branch changes
  pull_request:
  push:
    branches:
      - main

jobs:
  # 変更または新規のcppファイルのパスを取得する
  get-changed-files:
    runs-on: ubuntu-latest
    outputs:
      changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
    steps:
      - name: Checkout (GitHub)
        uses: actions/checkout@v3
        # tj-actions/changed-filesを動作させるために指定している
        with:
          fetch-depth: 0
      - name: Get changed files
        uses: tj-actions/changed-files@v39
        id: changed-files
        # パスに関係なく変更があった or 追加されたcppファイルのパスを全て取得する
        with:
          files: |
            **.cpp
          files_separator: "\n"
      - name: Output changed files
        run: echo ${{ steps.changed-files.outputs.all_changed_files }}

  # devcontainerと同等のコンテナを起動 & 変更があったcppファイルがあればコンパイルできるかチェックする
  run-devcontainer-and-compile-cpp-files:
    runs-on: ubuntu-latest
    needs: [get-changed-files]
    # permissionsを指定しないとGitHub Container Registryにpushできない
    permissions:
      contents: read
      packages: write
    steps:
      # 現状以下のissueで要望はあがっているが、jobをまたぐと別の仮想マシン上で動作する都合上、
      # jobごとにチェックアウトしないといけないらしい
      # https://github.com/actions/checkout/issues/19
      - name: Checkout (GitHub)
        uses: actions/checkout@v3
        # tj-actions/changed-filesを動作させるために指定している
        with:
          fetch-depth: 0
      # workflowの高速化のため、コンテナをGHCR上にアップ
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Check the changed files are able to be compiled
        uses: devcontainers/ci@v0.3
        env:
          WORKSPACE_PATH: /workspaces/Atcoder/
        with:
          imageName: ghcr.io/yuyahy/atcoder-devcontainer
          # TODO: atestのaliasが有効になっていない件の確認
          # TODO: コンパイルオプションをaliasとまとめられないか検討
          runCmd: |
            for i in ${{ needs.get-changed-files.outputs.changed_files }}; do
              echo $i
              cd $(dirname ${WORKSPACE_PATH}$i)
              pwd
              ls -la
              g++-12  -Wfatal-errors -Wall -Wextra -Wshadow -Wconversion -Wfloat-equal -ftrapv -fsanitize=address,undefined -fno-omit-frame-pointer -fno-sanitize-recover -std=gnu++20 -I /tmp/ac-library "$i"
            done
          env: |
            WORKSPACE_PATH
